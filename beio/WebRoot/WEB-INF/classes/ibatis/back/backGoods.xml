<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="backGoods">

	<!-- 品牌总数 -->
	<select id="countBrand" parameterType="BBV" resultType="int">
		select 
			count(1)
		from 
			gds_brand b
		where
			1 = 1
		<if test="name != null and name != ''">
			and b.name like concat('%', #{name}, '%')
		</if>
	</select>
	
	<!-- 查询品牌 -->
	<select id="pageBrand" parameterType="BBV" resultType="BBV">
		select 
			b.*
			, c.username as creatorName
			, m.username as modifierName
		from 
		    gds_brand b
		left join sys_user c on b.creator = c.id
		left join sys_user m on b.modifier = m.id
		where
			1 = 1
		<if test="name != null and name != ''">
			and b.name like concat('%', #{name}, '%')
		</if>
		order by 
		    cast(b.sort as unsigned int) asc
		limit 
			#{page}, #{rows};
	</select>
	
	<!-- 增加品牌 -->
	<insert id="addBrand" parameterType="BBV">
		insert into gds_brand(name, sort, creator, createTime, modifier, modifyTime) 
			values(#{name}, (select max(cast(sort as unsigned int)) + 2 from gds_brand t), #{creator}, #{createTime}, #{modifier}, #{modifyTime});
	</insert>
	
	<!-- 修改品牌 -->
	<update id="updBrand" parameterType="BBV">
		update gds_brand set name = #{name}, modifier = #{modifier}, modifyTime = #{modifyTime} where id = #{id};
	</update>
	
	<!-- 删除品牌 -->
	<update id="delBrand" parameterType="BBV">
		delete from gds_brand where id = #{id};
	</update>
	
	<!-- 刷新品牌 -->
	<update id="flushBrand" parameterType="BBV">
		UPDATE gds_brand b
		        INNER JOIN
		    (SELECT 
		        @rowno:=@rowno + 2 AS rowno, r.*
		    FROM
		        beio.gds_brand r, (SELECT @rowno:=0) t
		    ORDER BY CAST(r.sort AS UNSIGNED INT) ASC) t ON b.id = t.id 
		SET 
		    b.sort = t.rowno;
	</update>
	
	<!-- 向上品牌 -->
	<update id="upBrand" parameterType="BBV">
		update gds_brand set sort = sort - 3, modifier = #{modifier}, modifyTime = #{modifyTime} where id = #{id};
	</update>
	
	<!-- 向下品牌 -->
	<update id="downBrand" parameterType="BBV">
		update gds_brand set sort = sort + 3, modifier = #{modifier}, modifyTime = #{modifyTime} where id = #{id};
	</update>
	
	<!-- 分类总数 -->
	<select id="countClassify" parameterType="BCV" resultType="int">
		select 
			count(1)
		from 
			gds_classify b
		where
			b.level = #{level} 
		<if test="pid != null and pid != ''">
			and b.pid = #{pid}
		</if>
		<if test="name != null and name != ''">
			and b.name like concat('%', #{name}, '%')
		</if>
	</select>
	
	<!-- 查询分类 -->
	<select id="pageClassify" parameterType="BCV" resultType="BCV">
		select 
			b.*
			, c.username as creatorName
			, m.username as modifierName
		from 
		    gds_classify b
		left join sys_user c on b.creator = c.id
		left join sys_user m on b.modifier = m.id
		where
			b.level = #{level} 
		<if test="pid != null and pid != ''">
			and b.pid = #{pid}
		</if>
		<if test="name != null and name != ''">
			and b.name like concat('%', #{name}, '%')
		</if>
		order by 
		    cast(b.sort as unsigned int) asc
		limit 
			#{page}, #{rows};
	</select>
	
	<!-- 增加分类 -->
	<insert id="addClassify" parameterType="BCV">
		insert into gds_brand(name, sort, creator, createTime, modifier, modifyTime) 
			values(#{name}, (select max(cast(sort as unsigned int)) + 2 from gds_brand t), #{creator}, #{createTime}, #{modifier}, #{modifyTime});
	</insert>
	
	<!-- 修改分类 -->
	<update id="updClassify" parameterType="BCV">
		update gds_brand set name = #{name}, modifier = #{modifier}, modifyTime = #{modifyTime} where id = #{id};
	</update>
	
	<!-- 删除分类 -->
	<update id="delClassify" parameterType="BCV">
		delete from gds_brand where id = #{id};
	</update>
	
	<!-- 刷新分类 -->
	<update id="flushClassify" parameterType="BCV">
		UPDATE gds_brand b
		        INNER JOIN
		    (SELECT 
		        @rowno:=@rowno + 2 AS rowno, r.*
		    FROM
		        beio.gds_brand r, (SELECT @rowno:=0) t
		    ORDER BY CAST(r.sort AS UNSIGNED INT) ASC) t ON b.id = t.id 
		SET 
		    b.sort = t.rowno;
	</update>
	
	<!-- 向上分类 -->
	<update id="upClassify" parameterType="BCV">
		update gds_brand set sort = sort - 3, modifier = #{modifier}, modifyTime = #{modifyTime} where id = #{id};
	</update>
	
	<!-- 向下分类 -->
	<update id="downClassify" parameterType="BCV">
		update gds_brand set sort = sort + 3, modifier = #{modifier}, modifyTime = #{modifyTime} where id = #{id};
	</update>




	
	<!-- 后台查询商品总数 -->
	<select id="countGoods" parameterType="BGV" resultType="int">
		select 
			count(1)
		from 
			gds_goods g
		    , gds_brand b
		    , gds_classify c
		    , gds_classify cp
		where
			1 = 1
			and g.brandID = b.id
		    and g.classifyID = c.id
		    and c.pid = cp.id
		    
		    <if test="classifyPID != null and classifyPID != ''">
		    	and cp.id = #{classifyPID}
		    </if>
		    
			<if test="classifyID != null and classifyID != ''">
				and g.classifyID = #{classifyID}
			</if>
			<if test="brandID != null and brandID != ''">
				and g.brandID = #{brandID}
			</if>
			<if test="name != null and name != ''">
				and g.name like concat('%', #{name}, '%')
			</if>
	</select>
	
	<!-- 后台分页查询商品信息 -->
	<select id="pageGoods" parameterType="BGV" resultType="BGV">
		select 
			g.*
		    , b.name as brand 
		    , c.name as classify
		    , cp.name as classifyPname
		from 
			gds_goods g
		    , gds_brand b
		    , gds_classify c
		    , gds_classify cp
		where
			1 = 1
			and g.brandID = b.id
		    and g.classifyID = c.id
		    and c.pid = cp.id
		    
		    <if test="classifyPID != null and classifyPID != ''">
		    	and cp.id = #{classifyPID}
		    </if>
		    
			<if test="classifyID != null and classifyID != ''">
				and g.classifyID = #{classifyID}
			</if>
			<if test="brandID != null and brandID != ''">
				and g.brandID = #{brandID}
			</if>
			<if test="name != null and name != ''">
				and g.name like concat('%', #{name}, '%')
			</if>

		order by 
			cp.id asc
		    , c.id asc
		    , b.id asc
		    , g.id desc
		limit 
			#{page}, #{rows};
	</select>
	
	<!-- 根据pid获取全部分类 -->
	<select id="getAllClassifyByPid" parameterType="BCV" resultType="COMBOBOX">
		select c.id as val, c.name as text from gds_classify c where pid = #{pid} order by id asc;
	</select>
	
	<!-- 获取所有品牌 -->
	<select id="getAllBrand" resultType="COMBOBOX">
		select b.id as val, b.name as text from gds_brand b order by id asc;
	</select>
	
	<!-- 插入商品信息并返回id -->
	<insert id="addBackGoods" useGeneratedKeys="true" keyProperty="id" parameterType="BGV">
		insert into 
			gds_goods(
				name
				, descr
				, mPrice
				, cPrice
				, weight
				, salds
				, stock
				, brandID
				, classifyID
				, creator
				, createTime
			)
			values(
				#{name}
				, #{descr}
				, #{mPrice}
				, #{cPrice}
				, #{weight}
				, 0
				, #{stock}
				, #{brandID}
				, #{classifyID}
				, #{creator}
				, #{createTime}
			);
	</insert>
	
	<!-- 批量插入商品图片 -->
	<insert id="batchInsertGdsImages" parameterType="BIV">
		insert into 
			gds_image(
				orgPath
				, smaPath
				, midPath
				, bigPath
				, sortNum
				, goodsID
				, category
				, creator
				, createTime
			)
			values
			<foreach collection="list" item="i" separator=",">
				(
					#{i.orgPath}
					, #{i.smaPath}
					, #{i.midPath}
					, #{i.bigPath}
					, #{i.sortNum}
					, #{i.goodsID}
					, #{i.category}
					, #{i.creator}
					, #{i.createTime}
				)
			</foreach>
			;
	</insert>
	
	<!-- 删除商品信息 -->
	<delete id="delBackGdsGoods" parameterType="BGV" >
		delete from gds_goods where id = #{id};
	</delete>
	
	<!-- 根据商品id获取商品信息 -->
	<select id="getGoodsByID" parameterType="String" resultType="BGV">
		select t.*, c.pid as classifyPID from gds_goods t, gds_classify c where t.id = #{id} and t.classifyID = c.id;
	</select>
	
	<!-- 修改商品信息 -->
	<update id="updateGoods" parameterType="BGV">
		update 
			gds_goods
		set
			name = #{name}
			, descr = #{descr}
			, mPrice = #{mPrice}
			, cPrice = #{cPrice}
			, weight = #{weight}
			, stock = #{stock}
			, brandID = #{brandID}
			, classifyID = #{classifyID}
			, modifier = #{modifier}
			, modifyTime = #{modifyTime}
		where
			id = #{id};
	</update>
	
	<!-- 启用/禁用商品 -->
	<update id="controlGoodsEnable" parameterType="BGV">
		update gds_goods set enable = #{enable}, modifier = #{modifier}, modifyTime = #{modifyTime} where id = #{id}
	</update>	
		
	<!-- 根据商品id获取图片信息 -->
	<select id="getGoodsImagesByID" parameterType="String" resultType="BI">
		select * from gds_image where goodsID = #{goodsID} order by category asc, sortNum asc;
	</select>
	
	<!-- 修改图片路径 -->
	<update id="updateGoodsImage" parameterType="BIV">
		update 
			gds_image 
		set 
			orgPath = #{orgPath}
			, bigPath = #{bigPath}
			, midPath = #{midPath}
			, smaPath = #{smaPath}
			, modifier = #{modifier} 
			, modifyTime = #{modifyTime}
		where id = #{id};
	</update>
	
	<!-- 新增商品图片 -->
	<insert id="addGoodsImage" parameterType="BIV">
		insert into 
			gds_image(orgPath, smaPath, midPath, bigPath, goodsID, category, creator, createTime, sortNum)
			values(#{orgPath}, #{smaPath}, #{midPath}, #{bigPath}, #{goodsID}, #{category}, #{creator}, #{createTime}
				, (select max(sortNum)+1 from gds_image t where goodsID = #{goodsID} and category = #{category}));
		
	</insert>
	
	<!-- 删除图片信息 -->
	<delete id="delGoodsImage" parameterType="BIV">
		delete from gds_image where id = #{id} and sortNum != '0';
	</delete>
	
	
	<!-- 品牌管理 -->
	
	
	<!-- 全部分类 -->
	<select id="allClassify" parameterType="BCV" resultType="BCV">
		select c.* from gds_classify c order by cast(c.level as unsigned int) asc, cast(c.pid as unsigned int) asc;
	</select>
</mapper>